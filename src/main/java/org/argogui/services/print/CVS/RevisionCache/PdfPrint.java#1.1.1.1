/* 
 *  Copyright (C) 2016 RAD-IMAGE s.r.l.
 * 
 *  Questo software è proprietà di RAD-IMAGE s.r.l.
 *  Tutti gli usi non esplicitimante autorizzati sono da 
 *  considerarsi tutelati ai sensi di legge.
 * 
 *  RAD-IMAGE s.r.l.
 *  Via San Giovanni, 1 - Contrada Belvedere
 *  San Nicola Manfredi (BN)
 * 
 *  Creato il 10 Febbraio 2016, 19:06:00
 */
package it.radimage.argo.services.print;

import it.radimage.argo.services.ArgoService;
import java.io.*;
import java.util.*;

/**
 * Servizio di stampa via PDF.
 * Il servizio sovrintende alla generazione al
 * volo di PDF da utilizzare come strumento di stampa.
 *
 * @author Nicola De Nisco
 */
public interface PdfPrint extends ArgoService
{
  public static final String SERVICE_NAME = "PdfPrint";
  //
  /** Costanti */
  public static final String CONTENT_TYPE_HTML = "text/html; charset=UTF-8";
  public static final String CONTENT_TYPE_PDF = "application/pdf";
  public static final String FO_REQUEST_PARAM = "fo";
  public static final String XML_REQUEST_PARAM = "xml";
  public static final String XSL_REQUEST_PARAM = "xsl";
  public static final String ERROR_PAGE_MARKER = "ERROR_PAGE";
  public static final String PRINT_PARAM = "print_param";
  public static final String MODEL = "model";
  public static final String IDSTAT = "idstat";
  public static final String PLUGIN_NAME_FOP = "fop";
  public static final String PLUGIN_NAME_JASPER = "jasper";
  public static final String PATH_INFO = "PATH_INFO";
  public static final String SESSION_ID = "SESSION_ID";
  public static final String QUERY_STRING = "QUERY_STRING";

  public static class JobInfo
  {
    public String jobCode = null;     // codice del job
    public int percCompleted = 0;     // percentuale di completamento
    public File filePdf = null;       // relativo file PDF quando completato
    public String saveName = null;    // eventuale nome del PDF da utilizzare nell'header risposta
    public String uri = null;         // uri invocata al momento della richiesta
    public Throwable error = null;    // descrizione di un eventuale errore di elaborazione
    public Date tStart = null;        // istante di avvio elaborazione
    public int idUser = 0;            // utente che ha richiesto la stampa
  }

  /**
   * Restituisce un bean con i parametri per la stampa richiesta.
   * @param codiceStampa codice dalla stampa richiesta
   * @param params parametri accessori del plugin
   * @return eventuali campi per il report
   * @throws java.lang.Exception errore durante la stampa
   * @throws IllegalAccessException utente non autorizzato
   */
  public ReportParametersInfo getParameters(int idUser, String codiceStampa, Map params)
     throws Exception, IllegalAccessException;

  /**
   * Avvia il processo di stampa di un job.
   * @param codiceStampa codice dalla stampa richiesta
   * @param params parametri accessori del plugin
   * @return il descrittore informazioni sul job
   * @throws java.lang.Exception errore durante la stampa
   * @throws IllegalAccessException utente non autorizzato
   */
  public JobInfo generatePrintJob(int idUser, String codiceStampa, Map params)
     throws Exception, IllegalAccessException;

  /**
   * Avvia il processo di stampa di un job.
   * @param idUser utente che richiede la stampa
   * @param pluginName tipo del plugin richiesto
   * @param reportName nome del report richiesto
   * @param reportInfo informazioni supplementari per il plugin
   * @param params parametri accessori del plugin
   * @return il descrittore informazioni sul job
   * @throws java.lang.Exception errore durante la stampa
   * @throws IllegalAccessException utente non autorizzato
   */
  public JobInfo generatePrintJob(int idUser, String pluginName,
     String reportName, String reportInfo, Map params)
     throws Exception, IllegalAccessException;

  /**
   * Reperisce informazioni aggiornate sul job in avanzamento.
   * @param jobCode
   * @return
   * @throws java.lang.Exception
   */
  public JobInfo refreshInfo(String jobCode)
     throws Exception;

  /**
   * Ritorna un iteratore sui job in elaborazione.
   * @return
   * @throws Exception
   */
  public Enumeration getJobs()
     throws Exception;
}
