package org.argogui.om;

import com.workingdogs.village.Record;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import org.rigel5.db.DbUtils;
import org.rigel5.db.torque.CriteriaRigel;

/**
 * Esami richiesti per accettazione.
 *
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Mon Feb 17 23:20:33 CET 2025]
 *
 * This class provides static wrappers for the peer implementation classes.
 * This class will only be generated as long as it does not already exist
 * in the output directory.
 */
public class InfInEsamiPeer
   extends org.argogui.om.BaseInfInEsamiPeer
{
  public static List<InfInEsami> getByAccno(String accno, Connection con)
     throws Exception
  {
    CriteriaRigel cr = new CriteriaRigel(TABLE_NAME);
    cr.add(ACCESSION_NUMBER, accno);
    cr.addAscendingOrderByColumn(IN_ESAMI_ID);
    return doSelect(cr, con);
  }

  public static List<String> getSIDs(int idEsame, Connection con)
     throws Exception
  {
    String sSQL
       = "SELECT DISTINCT IC.SID"
       + "  FROM (INF.IN_CAMPIONI AS IC"
       + "   INNER JOIN INF.IN_PARAMETRI AS IP ON IP.ID_CAMPIONI=IC.IN_CAMPIONI_ID)"
       + " WHERE IP.ID_ESAMI=" + idEsame;

    List<Record> lsRecs = DbUtils.executeQuery(sSQL, false, con);
    if(lsRecs.isEmpty())
      return Collections.EMPTY_LIST;

    ArrayList<String> rv = new ArrayList<>();
    for(Record r : lsRecs)
      rv.add(r.getValue(1).asString());

    return rv;
  }

  public static void cambiaStato(int idEsame, int nuovoStato, Connection con)
     throws Exception
  {
    String sSQL
       = "UPDATE " + TABLE_NAME
       + " SET STATO_REC=" + nuovoStato
       + " WHERE IN_ESAMI_ID=" + idEsame;

    DbUtils.executeStatement(sSQL, con);
  }
}
